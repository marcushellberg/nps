# Development configuration
apiVersion: v1
kind: Namespace
metadata:
  name: nps

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nps
  namespace: nps
data:
  DATA_SOURCE_URL: "jdbc:postgresql://postgres-service:5432/nps"
  BASE_URL: "http://nps.lvh.me"
  SERVER_FORWARD_HEADERS_STRATEGY: "NATIVE"
  SERVER_USE_FORWARD_HEADERS: "true"

---
apiVersion: v1
kind: Secret
metadata:
  name: nps-db-credentials
  namespace: nps
type: Opaque
data:
  POSTGRES_USER: bnBz
  POSTGRES_PASSWORD: bnBzcGFzcw==
  POSTGRES_DB: bnBz

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: nps
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: nps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: nps-db-credentials
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: nps
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nps
  namespace: nps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nps
  template:
    metadata:
      labels:
        app: nps
    spec:
      containers:
        - name: nps
          image: nps:local
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
            - name: SERVER_FORWARD_HEADERS_STRATEGY
              valueFrom:
                configMapKeyRef:
                  name: nps
                  key: SERVER_FORWARD_HEADERS_STRATEGY
            - name: SERVER_USE_FORWARD_HEADERS
              valueFrom:
                configMapKeyRef:
                  name: nps
                  key: SERVER_USE_FORWARD_HEADERS
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: nps
                  key: DATA_SOURCE_URL
            - name: BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: nps
                  key: BASE_URL
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: nps-db-credentials
                  key: POSTGRES_USER
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nps-db-credentials
                  key: POSTGRES_PASSWORD
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: GOOGLE_CLIENT_ID
            - name: GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: GOOGLE_CLIENT_SECRET
          volumeMounts:
            - name: application-config
              mountPath: /config
      volumes:
        - name: application-config
          configMap:
            name: nps

---
apiVersion: v1
kind: Service
metadata:
  name: nps-service
  namespace: nps
spec:
  type: ClusterIP
  selector:
    app: nps
  ports:
    - port: 80
      targetPort: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nps-ingress
  namespace: nps
  annotations:
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "JSESSIONID"
    nginx.ingress.kubernetes.io/session-cookie-path: "/"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-cookie-path: "/ /"
    nginx.ingress.kubernetes.io/use-forwarded-headers: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  ingressClassName: nginx
  rules:
    - host: nps.lvh.me
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nps-service
                port:
                  number: 80